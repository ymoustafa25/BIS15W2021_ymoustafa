server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Academic_Yr == input$z)%>%
ggplot(aes(x = Ethnicity, y = FilteredCountFR, fill=Ethnicity)) +
geom_col()+
theme_economist()
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
labs(x ="Ethnicity",
y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Stats by Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2019"),
plotOutput("plot", width = "1000px", height = "600px"))))
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Academic_Yr == input$z)%>%
ggplot(aes(x = Ethnicity, y = FilteredCountFR, fill=Ethnicity)) +
geom_col()+
theme_gray()
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
labs(x ="Ethnicity",
y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(ggthemes)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Stats by Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2019"),
plotOutput("plot", width = "1000px", height = "600px"))))
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Academic_Yr == input$z)%>%
ggplot(aes(x = Ethnicity, y = FilteredCountFR, fill=Ethnicity)) +
geom_col()+
theme_economist()+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
labs(x ="Ethnicity",
y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Stats by Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2019"),
plotOutput("plot", width = "1000px", height = "600px"))))
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Academic_Yr == input$z)%>%
ggplot(aes(x = Ethnicity, y = FilteredCountFR, fill=Ethnicity)) +
geom_col()+
theme_economist()+
labs(x ="Ethnicity",
y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Stats by Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Asian"),
plotOutput("plot", width = "1000px", height = "600px"))))
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = Academic_Yr, y = FilteredCountFR, fill=Academic_Yr)) +
geom_col()+
theme_economist()+
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))+
labs(x ="Ethnicity",
y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Stats by Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Asian"),
plotOutput("plot", width = "1000px", height = "600px"))))
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = Academic_Yr, y = FilteredCountFR, fill=Academic_Yr)) +
geom_col()+
theme_economist()+
labs(x ="Ethnicity",
y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Stats by Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Asian"),
plotOutput("plot", width = "1000px", height = "600px"))))
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = Academic_Yr, y = FilteredCountFR, fill=Academic_Yr)) +
geom_col()+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
labs(x ="Ethnicity",
y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Stats by Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Asian"),
plotOutput("plot", width = "1000px", height = "600px"))))
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = Academic_Yr, y = FilteredCountFR, fill=Academic_Yr)) +
geom_col()+
theme_light(base_size = 18)+
scale_x_discrete(breaks=seq(2010, 2019, by = 1))+
theme(axis.text.x = element_text(angle = 90, hjust = 1), plot.title =
element_text(size = rel(1.5), hjust = 0.7))+
labs(x ="Ethnicity",
y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Stats by Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Asian"),
plotOutput("plot", width = "1000px", height = "600px"))))
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = Academic_Yr, y = FilteredCountFR)) +
geom_col()+
theme_light(base_size = 18)+
scale_x_discrete(breaks=seq(2010, 2019, by = 1))+
theme(axis.text.x = element_text(angle = 90, hjust = 1), plot.title =
element_text(size = rel(1.5), hjust = 0.7))+
labs(x ="Ethnicity",
y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Stats by Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Asian"),
plotOutput("plot", width = "1000px", height = "600px"))))
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = Academic_Yr, y = FilteredCountFR)) +
geom_col()+
theme_light(base_size = 18)+
scale_x_discrete(breaks=seq(2010, 2019, by = 1))+
labs(x ="Ethnicity",
y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Stats by Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Asian"),
plotOutput("plot", width = "1000px", height = "600px"))))
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = Academic_Yr, y = FilteredCountFR)) +
geom_col()+
scale_x_discrete(breaks=seq(2010, 2019, by = 1))+
labs(x ="Ethnicity",
y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Stats by Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Asian"),
plotOutput("plot", width = "1000px", height = "600px"))))
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = Academic_Yr, y = FilteredCountFR)) +
geom_col()+
theme_economist()+
scale_x_discrete(breaks=seq(2010, 2019, by = 1))+
labs(x ="Year",
y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Stats by Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Asian"),
plotOutput("plot", width = "1000px", height = "600px"))))
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = Academic_Yr, y = FilteredCountFR)) +
geom_col()+
theme_economist()+
#scale_x_discrete(breaks=seq(2010, 2019, by = 1))+
labs(x ="Year",
y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Stats by Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Asian"),
plotOutput("plot", width = "1000px", height = "600px"))))
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = Academic_Yr, y = FilteredCountFR)) +
geom_col()+
theme_economist()+
scale_x_discrete(breaks=seq(2010, 2019, by = 1))+
labs(x ="Year",
y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Stats by Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Asian"),
plotOutput("plot", width = "1000px", height = "600px"))))
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = Academic_Yr, y = FilteredCountFR)) +
geom_col()+
#theme_economist()+
scale_x_discrete(breaks=seq(2010, 2019, by = 1))+
labs(x ="Year",
y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Stats by Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Asian"),
plotOutput("plot", width = "1000px", height = "600px"))))
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = Academic_Yr, y = FilteredCountFR)) +
geom_col()+
theme_economist()+
scale_x_continous(breaks=seq(2010, 2019, by = 1))+
labs(x ="Year",
y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Stats by Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Asian"),
plotOutput("plot", width = "1000px", height = "600px"))))
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = Academic_Yr, y = FilteredCountFR)) +
geom_col()+
theme_economist()+
scale_x_continuous(breaks=seq(2010, 2019, by = 1))+
labs(x ="Year",
y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Stats by Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Asian"),
plotOutput("plot", width = "1000px", height = "600px"))))
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = Academic_Yr, y = FilteredCountFR)) +
geom_col()+
theme_economist()+
scale_x_continuous(breaks=seq(2010, 2019, by = 1))+
labs(x ="Year",
y = "Number of input$x")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Stats by Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Asian"),
plotOutput("plot", width = "1000px", height = "600px"))))
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = Academic_Yr, y = FilteredCountFR)) +
geom_col()+
theme_economist()+
scale_x_continuous(breaks=seq(2010, 2019, by = 1))+
labs(x ="Year",
y = "Number of" input$y)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Stats by Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Davis"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Asian"),
plotOutput("plot", width = "1000px", height = "600px"))))
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = Academic_Yr, y = FilteredCountFR)) +
geom_col()+
theme_economist()+
scale_x_continuous(breaks=seq(2010, 2019, by = 1))+
labs(x ="Year",
y = "Number of" & input$y)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
runApp('Admin Data by Year.R')
runApp('Admin Data by Year.R')
runApp('Admin Data by Ethnicity.R')
runApp('Admin Data by Ethnicity.R')
runApp('Admin Data by Ethnicity.R')
runApp('Admin Data by Ethnicity.R')
