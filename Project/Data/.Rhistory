swirl()
library("swirl")
swirl()
bye()
swirl()
help()
gwd()
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args("list.files")
args(list.files)
old.dir <- getws()
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R")
file.rename("mytest.R" to "mytest2.R")
file.rename("mytest.R" to mytest2.R)
file.rename(mytest.R to mytest2.R)
file.rename( "mytest.R" to "mytest2.R" )
file.rename("mytest.R" to "mytest2.R")
?file.rename
file.rename(mytest.R, mytest2.R)
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
?file.path
file.path("folder1")
file.path("folder1", "folder2")
?dir.create
file.path("testdir2", dir.create("testdir3"))
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd(old.dir)
1:20
pi:10
15:1
?:
?`:`
seq(1, 20)
seq(0. 10. by=0.5)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length("my_seq")
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
print(tf)
tf
num_vect >=
num_vect >=
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "yumna")
my_name
paste(my_name, collapse = " ")
paste("Hello","world!", sep = "")
paste("Hello","world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep ="")
LETTERS
paste(LETTERS, 1:4, sep = "-")
library("swirl")
swirl()
x <- c(44, NA, 5, NA)
3 * x
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
c(1.02707923, 0.15648624, 1.13500298)
info()
[c(1, 3, 5)]
c(1, 3, 5)
c(1, 3, 5)
y <- c(1, 3, 5)
[y]
y[y]
c(1, 3, 5)[c(1, 3, 5)]
y[c(1, 3, 5)]
skip()
x[c(0)]
x[0]
x[3000]
x[c(-20, -10)]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 = c(11, 2, NA)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "nor")
names(vect2) <- c("foo", "bar", "norf")
identical (vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
setwd("C:/Users/yamou/Documents/rstud")
library(tidyverse)
library(plotly)
library(ggplot2)
scores2018 = read.csv("UserSubmittedScores2018.csv", header = T)
NS2018 = scores2018 %>%
select("ScoreTotal", "NS1.Total.Score", "NS2.Total.Score", "NS3.Total.Score", "NS4.Total.Score", "NS5.Total.Score", "NS6.Total.Score") %>%
filter(!is.na(NS1.Total.Score)) %>%
transmute(ScoreTotal, Mean2 = as.integer(rowMeans(select(., -ScoreTotal), na.rm = TRUE))) %>%
transmute(TotalScore = ScoreTotal, Mean = Mean2)
scores = read.csv("UserSubmittedScores.csv", header = T)
NS2019 = scores %>%
select("TotalScore", "NS..1", "NS..2", "NS..3", "NS..4", "NS..5", "NS..6") %>%
filter(!is.na(NS..1)) %>%
transmute(TotalScore,
Mean = as.integer(rowMeans(select(., -TotalScore), na.rm = TRUE)))
NS = rbind(NS2018, NS2019)
YMSA_WT_lm = lm(Mean ~ TotalScore, data=(NS))
summary(YMSA_WT_lm)
### to get direct linear line only
x_plot = c(496:520)
y_plot = c(496:520)
xy_plot = cbind(x_plot, y_plot)
xy_plot
###
p = ggplot(NS, aes(x=Mean, y=TotalScore)) +
geom_boxplot(fill="pink", alpha=0.3) +
xlab("NS Scores Average") +
scale_y_continuous(breaks = seq(472,528,1))+
scale_x_continuous(breaks = seq(472,528,1)) +
stat_summary(fun.y=mean) +
geom_smooth(data = as.data.frame(xy_plot), aes(x=x_plot, y=y_plot), color = "black", fill = "black",
size = .75, alpha = 0.15,
#stat = "smooth",
position = "identity", method = "lm", formula = y ~ x,
se = TRUE, level = 0.95) +
geom_smooth(data = NS, aes(x=Mean, y=TotalScore), color = "red", fill = "red",
size = .38, alpha = 0.15,
#stat = "smooth",
position = "identity", method = "lm", formula = y ~ x,
se = TRUE, level = 0.95) +
theme (#plot.title = element_text(size = 10, hjust = 0.5),
axis.line = element_line (color = "black", size = 1, linetype = "solid"),
axis.ticks = element_blank(),
axis.text.x = element_text(face="plain", color="black", size=8),
axis.text.y = element_text(face="plain", color="black", size=8),
axis.title = element_text(size=10),
panel.grid.minor=element_blank(),
panel.grid.major=element_blank(),
panel.background = element_rect(fill = "white"),
legend.position = "blank")
myboi <- ggplotly(p,
tooltip = c("Mean", "TotalScore"))
myboi
tinytex::install_tinytex()
Sys.which('pdflatex')
install.packages(c("backports", "broom", "cachem", "colorspace", "data.table", "digest", "dplyr", "fansi", "fastmap", "fs", "glue", "jsonlite", "lubridate", "pillar", "pkgload", "ps", "Rcpp", "readr", "rmarkdown", "stringi", "testthat", "tibble", "tidyr", "units", "vctrs", "xfun"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(janitor)
eukaryotes<-readr::read_csv("data/eukaryotes.csv")
prokaryotes<-readr::read_csv("data/prokaryotes.csv")
virus<- readr::read_csv("data/viruses.csv")
view(virus)
virus2<-
virus%>%
separate(`Organism Groups`, into = c("viruss","otherr","family"),sep=";")
view(virus)
view(virus2)
virus2<-
virus%>%
separate(`Organism Groups`, into = c("viruss","otherr","family"),sep=";") %>%
select(-"viruss", -"other")
virus2<-
virus%>%
separate(`Organism Groups`, into = c("viruss","otherr","family"),sep=";") %>%
select(-"viruss", -"otherr")
view(virus2)
virus<-read_csv(here("Project", "Data", "viruses.csv"))
virus<-read_csv(here("BIS15W2021_ymoustafa","Project", "Data", "viruses.csv"))
setwd("C:/Users/yamou/Desktop/BIS105L/BIS15W2021_ymoustafa")
virus<-read_csv(here("Project", "Data", "viruses.csv"))
setwd("C:/Users/yamou/Desktop/BIS105L/BIS15W2021_ymoustafa/Project")
setwd("C:/Users/yamou/Desktop/BIS105L/BIS15W2021_ymoustafa/Project/Data")
virus<-read_csv(here("Project", "Data", "viruses.csv"))
view(virus)
virus<-read_csv("data/viruses.csv")
view(virus)
virus<-readr::read_csv("data/viruses.csv")
view(virus)
virus2<-virus%>%
separate(`Organism Groups`, into = c("viruss","other","family"),sep=";") %>%
select(-"viruss",-"other")
organism_data2
virus2
virus2 <- janitor::clean_names(virus2)
virus2
virus3<-virus2 %>%
separate(`host`, into = c("host1","host2","host3","host4"),sep=",")
virus3
virus3<-virus2 %>%
separate(`host`, into = c("host1","host2","host3","host4", "host5", "host6"),sep=",")
virus3
view(virus3)
naniar::miss_var_table(virus3)
naniar::miss_var_summary(virus3)
virus3<-virus2 %>%
separate(`host`, into = c("host1","host2","host3","host4", "host5"),sep=",")
naniar::miss_var_summary(virus3)
?str_dup()
?str_detect()
install.packages("stringr")
knitr::opts_chunk$set(echo = TRUE)
install.packages("stringr")
install.packages("stringr")
